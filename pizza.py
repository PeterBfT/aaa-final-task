import click
from random import randint


class PizzaRecipe:
    """–ö–ª–∞—Å—Å –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ä–µ—Ü–µ–ø—Ç–∞ –ø–∏—Ü—Ü—ã"""

    def __init__(self, name: str, *args) -> None:
        """
        –°–æ–∑–¥–∞–µ—Ç –ø–∏—Ü—Ü—É

        –í—Ö–æ–¥:
            name: –Ω–∞–∑–≤–∞–Ω–∏–µ –ø–∏—Ü—Ü—ã
            args: –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã –ø–∏—Ü—Ü—ã
        """
        self.name = name
        self.ingredients = [*args]

    def dict(self) -> None:
        """–í—ã–≤–æ–¥–∏—Ç —Ä–µ—Ü–µ–ø—Ç –ø–∏—Ü—Ü—ã –≤ –≤–∏–¥–µ —Å–ª–æ–≤–∞—Ä—è"""
        print('{}: {}'.format(self.name, ', '.join(self.ingredients)))


class CookingPizza:
    """–ö–ª–∞—Å—Å –¥–ª—è –≥–æ—Ç–æ–≤–∫–∏ –ø–∏—Ü—Ü—ã"""

    @staticmethod
    def log(string: str):
        """
        –î–µ–∫–æ—Ä–∞—Ç–æ—Ä –¥–ª—è –Ω–∞–ø–∏—Å–∞–Ω–∏—è –≤—Ä–µ–º–µ–Ω–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –æ–ø–µ—Ä–∞—Ü–∏–∏

        –í—Ö–æ–¥:
            string: —à–∞–±–ª–æ–Ω, –≤ –∫–æ—Ç–æ—Ä—ã–π –ø–æ–¥—Å—Ç–∞–≤–ª—è–µ—Ç—Å—è –≤—Ä–µ–º—è

        –í—Ä–µ–º—è - —Ä–∞–Ω–¥–æ–º–Ω–æ–µ –Ω–∞—Ç—É—Ä–∞–ª—å–Ω–æ–µ —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 42,
        —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ —Å –ø–æ–º–æ—â—å—é randint
        """
        def decorator(f):
            def wrapper(self):
                f(self)
                duration = randint(1, 42)
                print(string.format(duration))
            return wrapper
        return decorator

    @log('üë®‚Äçüç≥ –ü—Ä–∏–≥–æ—Ç–æ–≤–∏–ª–∏ –∑–∞ {}—Å!')
    def bake(self):
        """–ì–æ—Ç–æ–≤–∏—Ç –ø–∏—Ü—Ü—É"""

    @log('üõµ –î–æ—Å—Ç–∞–≤–∏–ª–∏ –∑–∞ {}—Å!')
    def delivery(self):
        """–î–æ—Å—Ç–∞–≤–ª—è–µ—Ç –ø–∏—Ü—Ü—É"""

    @log('üè† –ó–∞–±—Ä–∞–ª–∏ –∑–∞ {}—Å!')
    def pickup(self):
        """–°–∞–º–æ–≤—ã–≤–æ–∑"""

    def big_pizza(self):
        """–ë–æ–ª—å—â–∞—è –ø–∏—Ü—Ü–∞"""
        print('üòé –ë–æ–ª—å—à–∞—è –ø–∏—Ü—Ü–∞')


@click.group()
def cli():
    pass


@cli.command()
@click.option('--delivery', default=False, is_flag=True)
@click.option(
    '--size', is_flag=False, flag_value='L', default='L',
    type=click.Choice(['L', 'XL'], case_sensitive=False)
)
@click.argument('pizza', nargs=1)
def order(pizza: str, delivery: bool, size: str):
    """
    –ì–æ—Ç–æ–≤–∏—Ç –∏ –¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –ø–∏—Ü—Ü—É

    –í—Ö–æ–¥:
        name: –Ω–∞–∑–≤–∞–Ω–∏–µ –ø–∏—Ü—Ü—ã
        delivery: –Ω–∞–ª–∏—á–∏–µ –¥–æ—Å—Ç–∞–≤–∫–∏
        size: —Ä–∞–∑–º–µ—Ä –ø–∏—Ü—Ü—ã
    """

    pizzas = ['margherita', 'pepperoni', 'hawaiian']
    if pizza.lower() not in pizzas:
        print('–¢–∞–∫–æ–π –ø–∏—Ü—Ü—ã –ø–æ–∫–∞ –Ω–µ—Ç –≤ –Ω–∞—à–µ–º –º–µ–Ω—é')
        return

    pizza_order = CookingPizza()

    if size == 'XL':
        pizza_order.big_pizza()

    pizza_order.bake()

    if delivery:
        pizza_order.delivery()
    else:
        pizza_order.pickup()


@cli.command()
def menu():
    """–í—ã–≤–æ–¥–∏—Ç –º–µ–Ω—é"""
    Margherita = PizzaRecipe('- Margherita üßÄ', 'tomato sauce',
                             'mozzarella', 'tomatoes')
    Margherita.dict()

    Pepperoni = PizzaRecipe('- Pepperoni üçï', 'tomato sauce',
                            'mozzarella', 'pepperoni')
    Pepperoni.dict()

    Hawaiian = PizzaRecipe('- Hawaiian üçç', 'tomato sauce',
                           'mozzarella', 'chicken', 'pineapples')
    Hawaiian.dict()


if __name__ == '__main__':
    cli()
